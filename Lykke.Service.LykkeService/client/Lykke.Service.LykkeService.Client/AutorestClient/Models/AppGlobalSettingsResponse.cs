// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Lykke.Service.LykkeService.Client.AutorestClient.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class AppGlobalSettingsResponse
    {
        /// <summary>
        /// Initializes a new instance of the AppGlobalSettingsResponse class.
        /// </summary>
        public AppGlobalSettingsResponse()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the AppGlobalSettingsResponse class.
        /// </summary>
        public AppGlobalSettingsResponse(bool showIcoBanner, string depositUrl = default(string), bool? debugMode = default(bool?), string defaultIosAssetGroup = default(string), string defaultAssetGroupForOther = default(string), bool? isOnReview = default(bool?), double? minVersionOnReview = default(double?), double? icoLkkSold = default(double?), bool? isOnMaintenance = default(bool?), int? lowCashOutTimeoutMins = default(int?), int? lowCashOutLimit = default(int?), bool? marginTradingEnabled = default(bool?), bool? cashOutBlocked = default(bool?), bool? btcOperationsDisabled = default(bool?), bool? bitcoinBlockchainOperationsDisabled = default(bool?), bool? limitOrdersEnabled = default(bool?), double? marketOrderPriceDeviation = default(double?), IList<string> blockedAssetPairs = default(IList<string>), string onReviewAssetConditionLayer = default(string), System.DateTime? icoStartDtForWhitelisted = default(System.DateTime?), System.DateTime? icoStartDt = default(System.DateTime?))
        {
            DepositUrl = depositUrl;
            DebugMode = debugMode;
            DefaultIosAssetGroup = defaultIosAssetGroup;
            DefaultAssetGroupForOther = defaultAssetGroupForOther;
            IsOnReview = isOnReview;
            MinVersionOnReview = minVersionOnReview;
            IcoLkkSold = icoLkkSold;
            IsOnMaintenance = isOnMaintenance;
            LowCashOutTimeoutMins = lowCashOutTimeoutMins;
            LowCashOutLimit = lowCashOutLimit;
            MarginTradingEnabled = marginTradingEnabled;
            CashOutBlocked = cashOutBlocked;
            BtcOperationsDisabled = btcOperationsDisabled;
            BitcoinBlockchainOperationsDisabled = bitcoinBlockchainOperationsDisabled;
            LimitOrdersEnabled = limitOrdersEnabled;
            MarketOrderPriceDeviation = marketOrderPriceDeviation;
            BlockedAssetPairs = blockedAssetPairs;
            OnReviewAssetConditionLayer = onReviewAssetConditionLayer;
            IcoStartDtForWhitelisted = icoStartDtForWhitelisted;
            IcoStartDt = icoStartDt;
            ShowIcoBanner = showIcoBanner;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "DepositUrl")]
        public string DepositUrl { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "DebugMode")]
        public bool? DebugMode { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "DefaultIosAssetGroup")]
        public string DefaultIosAssetGroup { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "DefaultAssetGroupForOther")]
        public string DefaultAssetGroupForOther { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "IsOnReview")]
        public bool? IsOnReview { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "MinVersionOnReview")]
        public double? MinVersionOnReview { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "IcoLkkSold")]
        public double? IcoLkkSold { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "IsOnMaintenance")]
        public bool? IsOnMaintenance { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "LowCashOutTimeoutMins")]
        public int? LowCashOutTimeoutMins { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "LowCashOutLimit")]
        public int? LowCashOutLimit { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "MarginTradingEnabled")]
        public bool? MarginTradingEnabled { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "CashOutBlocked")]
        public bool? CashOutBlocked { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "BtcOperationsDisabled")]
        public bool? BtcOperationsDisabled { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "BitcoinBlockchainOperationsDisabled")]
        public bool? BitcoinBlockchainOperationsDisabled { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "LimitOrdersEnabled")]
        public bool? LimitOrdersEnabled { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "MarketOrderPriceDeviation")]
        public double? MarketOrderPriceDeviation { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "BlockedAssetPairs")]
        public IList<string> BlockedAssetPairs { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "OnReviewAssetConditionLayer")]
        public string OnReviewAssetConditionLayer { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "IcoStartDtForWhitelisted")]
        public System.DateTime? IcoStartDtForWhitelisted { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "IcoStartDt")]
        public System.DateTime? IcoStartDt { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ShowIcoBanner")]
        public bool ShowIcoBanner { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
        }
    }
}
